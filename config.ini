[settings]

# === Factorio Executable Location ===

# Select how the tool locates the Factorio executable.
# Options:
#   fixed_path – Use a fixed folder path (see below)
#   active_window_monitor – Auto-detect the active Factorio instance from the last focused window
factorio_locator_method = active_window_monitor

# Full path to the Factorio executable. Required if using `fixed_path` mode.
# Examples:
#   Windows: C:/Program Files/Factorio/bin/x64/factorio.exe
#   Linux:   /home/user/.factorio/bin/x64/factorio
#   macOS:   /Applications/factorio.app/Contents/MacOS/factorio or /Applications/factorio.app
fixed_path_factorio_executable = ./Factorio/bin/x64/factorio.exe

# How often to check the focused window (in seconds). Used in active_window_monitor mode.
factorio_locator_poll_interval_in_seconds = 2


# === Map Preview Generation ===

# Size (in pixels) of the generated map preview images (e.g., 2048, 3072, 4096).
map_preview_size = 3072

# Folder where preview images will be saved
previews_output_dir = ./previews

# List of planets to generate previews for
planet_names = ["nauvis", "vulcanus", "gleba", "fulgora", "aquilo"]


# === Sound Feedback ===

# Optional sound played when the generation starts
sound_start_filepath = ./assets/sounds/vibraphone-14.ogg
start_sound_volume = 0.2

# Optional sound played on successful generation
sound_success_filepath = ./assets/sounds/vibraphone-26.ogg
success_sound_volume = 0.2

# Optional sound played on generation failure
sound_failure_filepath = ./assets/sounds/saw-02.ogg
failure_sound_volume = 0.5


[map_exchange_input]

# Method used to provide the map exchange string.
# Options:
#   clipboard_monitor – Auto-detect valid map string from clipboard
#   file_monitor      – Watch a file for changes, useful when connected to another tool
map_exchange_input_method = clipboard_monitor

# How often to check for new map strings (in seconds)
map_exchange_input_poll_interval_in_seconds = 0.5

# Path to the map string file (used only in file_monitor mode)
# Example:
#   Windows/Linux/macOS: ./map_string.txt
file_monitor_filepath = ./map_string.txt


[upload]

# How previews should be uploaded:
#   rclone – Use rclone to sync with a remote (Dropbox, Google Drive, etc.)
#   skip   – Skip upload entirely (or user handles previews externally)
upload_method = rclone

# Path to the rclone folder (must contain the rclone binary)
# Examples:
#   Windows: ./third_party/rclone/rclone.exe
#   Linux:   ./third_party/rclone/rclone
#   macOS:   ./third_party/rclone/rclone
rclone_executable = ./third_party/rclone/rclone.exe

# Name of the rclone remote (must match the name from `rclone config`)
# Example: dropbox, onedrive
rclone_remote_service = dropbox

# Remote folder inside your rclone target (e.g., FactorioPreviews/)
remote_upload_dir = FactorioPreviews/

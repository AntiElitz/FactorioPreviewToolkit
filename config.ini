[settings]

# Select how the tool locates the Factorio executable.
# Options:
#   fixed_path – Use a fixed folder path from 'factorio_folder' (default)
#   active_window – Auto-detect the active Factorio instance based on last focused window
factorio_locator_method = active_window

# Path to the Factorio executable. Used when factorio_locator_method = "fixed_path"
# Example for Windows: C:/Program Files/Factorio/bin/x64/factorio.exe
# Example for Linux:   /home/user/.factorio/bin/x64/factorio
# Example for macOS:   /Applications/factorio.app/Contents/MacOS/factorio
fixed_path_factorio_executable = ./Factorio/bin/x64/factorio.exe

active_window_poll_interval_in_seconds = 2

# Size (in pixels) for map preview images
map_preview_size = 3072

# Paths to the sound files played during different stages
sound_start_file = ./assets/sounds/vibraphone-14.ogg
sound_volume_start_file = 0.2

sound_success_file = ./assets/sounds/vibraphone-26.ogg
sound_volume_success_file = 0.2

sound_failure_file = ./assets/sounds/saw-02.ogg
sound_volume_failure_file = 0.5

# Folder where preview images will be saved
previews_output_folder = ./previews

# List of planets to generate previews for
planet_names = ["nauvis", "vulcanus", "gleba", "fulgora", "aquilo"]

[map_exchange_input]
# Method to provide the map exchange string. Options:
# - clipboard_auto      → Auto-detect valid string from clipboard.
# - file_watch          → Watch file for changes and read if it's a map string.
map_exchange_input_method = clipboard_auto

# Path to the map exchange string file (used only if method = file_watch)
map_exchange_file_path = ./map_string.txt


[upload]
# Upload method to use:
# - rclone → Upload using configured rclone remote
# - none   → No upload (user handles sync manually or by syncing previews_dirname
#            with a cloud storage folder like OneDrive, Dropbox, or Google Drive)
upload_method = rclone

# Remote folder inside the configured remote service
upload_remote_folder = FactorioPreviews/

# Path to the folder that contains the rclone executable
rclone_folder = ./third_party/rclone

# Name of the rclone remote (must be configured via `rclone config`)
rclone_remote_service = dropbox